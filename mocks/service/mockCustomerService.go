// Code generated by mockery v2.10.6. DO NOT EDIT.

package service

import (
	domain "github.com/ricardomaricato/banking/domain"
	dto "github.com/ricardomaricato/banking/dto"

	errs "github.com/ricardomaricato/banking/errs"

	mock "github.com/stretchr/testify/mock"
)

// MockCustomerService is an autogenerated mock type for the CustomerService type
type MockCustomerService struct {
	mock.Mock
}

// GetAllCustomer provides a mock function with given fields: _a0
func (_m *MockCustomerService) GetAllCustomer(_a0 string) ([]domain.Customer, *errs.AppError) {
	ret := _m.Called(_a0)

	var r0 []domain.Customer
	if rf, ok := ret.Get(0).(func(string) []domain.Customer); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Customer)
		}
	}

	var r1 *errs.AppError
	if rf, ok := ret.Get(1).(func(string) *errs.AppError); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errs.AppError)
		}
	}

	return r0, r1
}

// GetCustomer provides a mock function with given fields: _a0
func (_m *MockCustomerService) GetCustomer(_a0 string) (*dto.CustomerResponse, *errs.AppError) {
	ret := _m.Called(_a0)

	var r0 *dto.CustomerResponse
	if rf, ok := ret.Get(0).(func(string) *dto.CustomerResponse); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dto.CustomerResponse)
		}
	}

	var r1 *errs.AppError
	if rf, ok := ret.Get(1).(func(string) *errs.AppError); ok {
		r1 = rf(_a0)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errs.AppError)
		}
	}

	return r0, r1
}
